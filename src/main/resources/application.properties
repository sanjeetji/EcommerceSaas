# --- App & Web ---
spring.application.name=ecommerce-saas
server.port=8080
#spring.profiles.default=dev
spring.profiles.active=prod

# --- Actuator ---
management.endpoints.web.exposure.include=health,info,loggers
management.endpoint.health.show-details=always
management.endpoint.loggers.enabled=true

# --- JPA and Hibernate settings ---
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate=DEBUG
logging.level.org.springframework.transaction=DEBUG
logging.level.org.springframework.orm.jpa=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE

# --- Logging (default) ---
logging.level.com.saas.ecommerce=INFO
logging.level.org.springframework.web=INFO
# Uncomment to debug your filter/package:
# logging.level.com.saas.ecommerce.config=DEBUG
logging.level.org.springframework.security=DEBUG

# --- Session store selection (Redis-first with DB fallback) ---
# auto = try Redis; if unavailable or down, fallback to DB
app.session.store=auto
# TTL (days) for server-side session id (sid)
app.session.ttl-days=30

# --- Redis (left blank here; override per profile if needed) ---
# spring.redis.host=
# spring.redis.port=
# spring.redis.password=
# spring.redis.ssl=true

# --- JWT (shared lifetimes; secrets set per profile) ---
# 15 minutes = 900 S AND 2 minutes = 120 s
jwt.expiry.access=2400
# 7 days
jwt.expiry.refresh=604800
# keep simple; rotate only if you implement it
jwt.rotation.enabled=false

#Handle Multi login functionality, jaise yha hum filhal ke liye globally handle kr rhe h, baise hi client ya user ke liye bhi kar sakte h
# Global default: single-active-login enforce kare? (true/false)
app.session.single-active=true
# Jinke liye multi-login allow hai (comma-separated Client IDs)
# e.g., 101,202 => in clients ke liye sid check skip hoga
#app.session.multi-login.clients=
# optionally, user/email-based allowlist (comma-separated)
#app.session.multi-login.users=

#Example how to handle single or multi login flow for globally, superadmin, client or any specific user
#Global multi-login (old behavior):
#app.session.single-active=false
#Only client 123 ko multi-login allow:
#app.session.single-active=true
#app.session.multi-login.clients=123
#Specific user ko allow:
#app.session.multi-login.users=vip@customer.com
